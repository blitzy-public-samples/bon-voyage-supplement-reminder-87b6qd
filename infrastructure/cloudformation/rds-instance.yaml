AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for creating and configuring the Amazon RDS instance for the supplement reminder website

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project
    Default: supplement-reminder

  Environment:
    Type: String
    Description: Deployment environment (e.g., dev, staging, prod)
    AllowedValues:
      - dev
      - staging
      - prod

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC where the RDS instance will be created

  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the first private subnet for the RDS instance

  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the second private subnet for the RDS instance

  DBName:
    Type: String
    Description: Name of the database to create
    Default: supplementreminder
    MinLength: 1
    MaxLength: 63
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.

  DBUsername:
    Type: String
    Description: Username for the database
    NoEcho: true
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.

  DBPassword:
    Type: String
    Description: Password for the database
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9!@#$%^&*()_+=-]+'
    ConstraintDescription: Must be at least 8 characters long and contain only alphanumeric and special characters.

  DBInstanceClass:
    Type: String
    Description: Instance class for the RDS instance
    Default: db.t3.micro
    AllowedValues:
      - db.t3.micro
      - db.t3.small
      - db.t3.medium
      - db.t3.large
    ConstraintDescription: Must be a valid RDS instance type.

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS instance
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-db-subnet-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !GetAtt VpcId.CidrBlock
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-rds-sg
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: postgres13
      Description: Custom parameter group for PostgreSQL 13.7
      Parameters:
        max_connections: '100'
        shared_buffers: '{DBInstanceClass}Memory/4'
        effective_cache_size: '{DBInstanceClass}Memory/2'
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-db-param-group
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      Engine: postgres
      EngineVersion: '13.7'
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: 20
      MaxAllocatedStorage: 100
      StorageType: gp3
      MultiAZ: !If [IsProd, true, false]
      PubliclyAccessible: false
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      BackupRetentionPeriod: !If [IsProd, 30, 7]
      DeletionProtection: !If [IsProd, true, false]
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt MonitoringRole.Arn
      DBParameterGroupName: !Ref DBParameterGroup
      EnableIAMDatabaseAuthentication: true
      CopyTagsToSnapshot: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-db
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  MonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-rds-monitoring-role
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

Conditions:
  IsProd: !Equals [!Ref Environment, prod]

Outputs:
  DBInstanceEndpoint:
    Description: Connection endpoint for the RDS instance
    Value: !GetAtt DBInstance.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DBEndpoint

  DBInstanceName:
    Description: Name of the created database
    Value: !Ref DBName
    Export:
      Name: !Sub ${AWS::StackName}-DBName

  DBInstancePort:
    Description: Port number for the RDS instance
    Value: !GetAtt DBInstance.Endpoint.Port
    Export:
      Name: !Sub ${AWS::StackName}-DBPort

  DBInstanceArn:
    Description: ARN of the RDS instance
    Value: !Ref DBInstance
    Export:
      Name: !Sub ${AWS::StackName}-DBArn