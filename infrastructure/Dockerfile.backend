# Use the official Node.js 16 Alpine image as the base
FROM node:16-alpine

# Set the Node.js environment to production mode
ENV NODE_ENV=production

# Create a non-root user and group with explicit IDs
RUN addgroup -g 1001 -S nodejs && adduser -u 1001 -S nodejs -G nodejs

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json (if exists) to install dependencies
COPY --chown=nodejs:nodejs ../src/backend/package*.json ./

# Install only production dependencies and clear npm cache to reduce image size
RUN npm ci --only=production && npm cache clean --force

# Copy the entire backend source code to the container
COPY --chown=nodejs:nodejs ../src/backend .

# Build the TypeScript code
RUN npm run build

# Expose the port the app runs on
EXPOSE 3000

# Switch to non-root user for security
USER nodejs

# Set up health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD node healthcheck.js

# Specify the command to run the application
CMD ["node", "dist/server.js"]